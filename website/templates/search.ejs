<html lang="en" ng-app="myApp"><head>
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
  
    <title>Profile Page</title>
    <meta content="" name="description">
    <meta content="" name="keywords">
  
    <!-- Favicons -->
    <link href="/assets/img/logo.png" rel="icon">
    <link href="/assets/img/apple-touch-icon.png" rel="apple-touch-icon">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.32/dist/sweetalert2.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.32/dist/sweetalert2.all.min.js"></script>
  
    <!-- Google Fonts -->
    <link href="https://fonts.gstatic.com" rel="preconnect">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Nunito:300,300i,400,400i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
  
    <!-- Vendor CSS Files -->
    <link href="/assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/vendor/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/vendor/quill/quill.snow.css" rel="stylesheet">
    <link href="/assets/vendor/quill/quill.bubble.css" rel="stylesheet">
    <link href="/assets/vendor/remixicon/remixicon.css" rel="stylesheet">
    <link href="/assets/vendor/simple-datatables/style.css" rel="stylesheet">
  
    <!-- Template Main CSS File -->
    <link href="/assets/css/style.css" rel="stylesheet">
  
    <!-- AngularJS and JS file for rendering data -->  
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
    <script src="profilePage.js"></script>
  
    <!-- =======================================================
    * Template Name: NiceAdmin
    * Updated: Jan 09 2024 with Bootstrap v5.3.2
    * Template URL: https://bootstrapmade.com/nice-admin-bootstrap-admin-html-template/
    * Author: BootstrapMade.com
    * License: https://bootstrapmade.com/license/
    ======================================================== -->
  <style type="text/css" id="operaUserStyle"></style><style type="text/css"></style></head>
  
  <body class="toggle-sidebar" ng-controller="DataController">
  <script>
  
  function deletePost(PID) {
    fetch(`/post/${PID}`, {
      method: 'DELETE'
    })
    .then(response => {
      if (response.ok) {
        console.log('Post deleted successfully');
        location.reload('/profile');
      } else {
        console.error('Failed to delete post');
      }
    })
    .catch(error => {
      console.error('Error deleting post:', error);
    });
  };
  
  function approval(id) {
      var aprv = new XMLHttpRequest();
      aprv.open("GET", "/api/rent-approval/" + id);
      aprv.setRequestHeader("Content-Type", "application/json; charset=UTF-8");
      aprv.onreadystatechange = function() {
          if (aprv.readyState != 4) {
              console.log("loading");
          } else {
              var res = JSON.parse(aprv.responseText);
              alert(res.Msg);
          }        
      };
      aprv.send();
  }
  
  function denial(id) {
      var deny = new XMLHttpRequest();
      deny.open("GET", "/api/rent-denial/" + id);
      deny.setRequestHeader("Content-Type", "application/json; charset=UTF-8");
      deny.onreadystatechange = function() {
          if (deny.readyState != 4) {
              console.log("loading");
          } else {
              var res = JSON.parse(deny.responseText);
              alert(res.Msg);
          }
      };
      deny.send();
  }
  
  function dismiss(id){
    var dismis = new XMLHttpRequest();
    dismis.open("GET", "/api/dismiss/" + id);
    dismis.onreadystatechange = function(){
      if (dismis.readyState != 4) {
        console.log("loading");
      } else {
        var res = JSON.parse(dismis.responseText);
        alert(res.Msg);
      }
    };
    dismis.send();
  }
  
  
  function getNotifications(callback){
    var notif = new XMLHttpRequest();
    notif.open("GET", "/api/get-notifications");
    notif.onreadystatechange = function(){
      if (notif.readyState != 4) {
        console.log("loading");
      } else {
        var res = JSON.parse(notif.responseText);
        let notifi=[];
        for(let i=0; i<res.Notifications.length; i++){
          let newobj={
            'Title' : res.Notifications[i].Title,
            'Description' : res.Notifications[i].Description,
            'PID' : res.Notifications[i].Post,
            'ApprovalNeeded' : res.Notifications[i].ApprovalNeeded,
            'RenterID' : res.Notifications[i].Users.Renter,
            'LeaserID' :res.Notifications[i].Users.Leaser,
            'ID' : res.Notifications[i]._id
          }
          notifi.push(newobj);
        }
        callback(notifi);
      }
    };
    notif.send();
  }
  
  
  function displayNotifications() {
    let notif = getNotifications(function(notifi) {
  
    var badgeNumber = document.getElementById("badge-number");
      var dropdownHeader = document.getElementById("dropdown-header");
      var notificationDiv = document.getElementById("notification");
  
      badgeNumber.textContent = notifi.length;
  
      dropdownHeader.textContent = "You have " + notifi.length + " new notification(s)";
      notificationDiv.innerHTML = "";
  
      notifi.forEach(function(notification) {
        var hr = document.createElement("hr");
        
        var listItem = document.createElement("li");
        listItem.className = "message-item";
        listItem.id = "message-item";
        listItem.style.paddingBottom = 0;
        
        var div = document.createElement("div");
        
        if (notification.ApprovalNeeded === true) {
          var titleLink = document.createElement("a");
          titleLink.href = "/post/" + notification.PID;
          var title = document.createElement("h4");
          title.textContent = notification.Title;
          title.style.color = "blue";
              titleLink.appendChild(title);
              div.appendChild(titleLink);
  
              var descLink = document.createElement("a");
              descLink.href = "/profileview/" + notification.RenterID;
              var desc = document.createElement("p");
              desc.textContent = notification.Description;
              descLink.appendChild(desc);
              div.appendChild(descLink);
  
              var approvalDiv = document.createElement("div");
              approvalDiv.className = "row";
              approvalDiv.id = "approval";
              approvalDiv.style.marginLeft = "2rem";
  
              var approveButton = document.createElement("button");
              approveButton.className = "col-1 btn btn-success";
              approveButton.textContent = "Approve";
              approveButton.style.width = "7rem";
              approveButton.style.height = "2rem";
              approveButton.style.textAlign = "center";
              approveButton.style.marginRight = "1rem";
              approveButton.onclick = function() {
                approval(notification.ID);
                location.reload();
              };
              
              var denyButton = document.createElement("button");
              denyButton.className = "col-1 btn btn-danger";
              denyButton.textContent = "Deny";
              denyButton.style.width = "7rem";
              denyButton.style.height = "2rem";
              denyButton.style.textAlign = "center";
              denyButton.onclick = function() {
                denial(notification.ID);
                location.reload();
              };
              
              approvalDiv.appendChild(approveButton);
              approvalDiv.appendChild(denyButton);
              div.appendChild(approvalDiv);
            } else if (notification.ApprovalNeeded === false) {
              var titleLink = document.createElement("a");
              titleLink.href = "/profileview/" + notification.LeaserID;
              var title = document.createElement("h4");
              title.textContent = notification.Title;
              title.style.color = "blue";
              titleLink.appendChild(title);
              div.appendChild(titleLink);
              
              var descLink = document.createElement("a");
              descLink.href = "/post/" + notification.PID;
              var desc = document.createElement("p");
              desc.textContent = notification.Description;
              descLink.appendChild(desc);
              div.appendChild(descLink);
              
              var dismissDiv = document.createElement("div");
              dismissDiv.className = "row";
              dismissDiv.id = "Dismiss";
              dismissDiv.style.marginLeft = "2rem";
              
              var NID=notification.ID;
              var dismissButton = document.createElement("button");
              dismissButton.className = "col-1 btn btn-danger";
              dismissButton.textContent = "Dismiss X";
              dismissButton.style.width = "7rem";
              dismissButton.style.height = "2rem";
              dismissButton.style.textAlign = "center";
              dismissButton.style.marginLeft = "5rem";
              dismissButton.onclick = async function() {
                await dismiss(NID);
              };
  
              dismissDiv.appendChild(dismissButton);
              div.appendChild(dismissDiv);
          }
  
          listItem.appendChild(hr);
          listItem.appendChild(div);
  
          notificationDiv.appendChild(listItem);
          
        });
      });
  
  }
  displayNotifications();
  
      </script>
  
    <!-- ======= Header ======= -->
    <% if (!isAdmin) { %>
    <header id="header" class="header fixed-top d-flex align-items-center">
  
      <div class="d-flex align-items-center justify-content-between">
        <a href="/home" class="logo d-flex align-items-center" style="width: 150px;height: 10px;">
          <img src="/assets/img/logo.png" alt="logo" style="height: 60px;">
        </a>
        
      </div><!-- End Logo -->
  
      <div class="input-group search-bar" style="width: 30rem;">
        <form class="search-form d-flex align-items-center" method="GET" action="/search" onsubmit="return validateSearch()">
            <input type="text" class="form-control" id="queryInput" name="query" placeholder="Search" title="Enter Username" required>
            <div class="input-group-append">
                <button type="submit" title="Search"><i class="bi bi-search"></i></button>
            </div>  
        </form>
    </div><!-- End Search Bar -->
    
      <script>
        function validateInput(input) {
            input.value = input.value.replace(/[^0-9]/g, '');
        }
        </script>

    <nav class="header-nav ms-auto">
      <ul class="d-flex align-items-center">
        <!-- Create Post Button -->
        <li class="nav-item">
          <a class="nav-link" href="/create-post" title="Create Post">
            <i class="bi bi-plus-circle"></i>
            <small>Post</small>
          </a>
        </li>
    
        <!-- Create Poll Button -->
        <li class="nav-item">
          <a class="nav-link" href="/createPoll" title="Create Poll">
            <i class="bi bi-clipboard-data"></i>
            <small>Poll</small>
          </a>
        </li>
    
        <!-- Chat Button -->
        <li class="nav-item">
          <a class="nav-link" href="/chat" title="Chat">
            <i class="bi bi-chat-dots"></i>
            <small>Chat</small>
          </a>
        </li>
    
        <!-- Events Button -->
        <li class="nav-item">
          <a class="nav-link" href="/user/events" title="Events">
            <i class="bi bi-calendar-event"></i>
            <small>Events</small>
          </a>
        </li>
    
          <li class="nav-item dropdown">
            <button class="nav-link nav-icon" data-bs-toggle="dropdown">
              <i class="bi bi-bell"></i>
              <span class="badge bg-primary badge-number" id="badge-number">0</span>
            </button>
            <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow notifications">
              <li class="dropdown-header" id="dropdown-header">No Notifications</li>
              <!-- Change this line -->
              <div id="notification-list" class="notification-scroll"></div>
              <li class="dropdown-footer">
                  <button class="btn btn-danger btn-sm clear-all">Clear All Notifications</button>
              </li>
          </ul>
          </li>
          <li class="nav-item dropdown pe-3">
            <a
              class="nav-link nav-profile d-flex align-items-center pe-0"
              href="#"
              data-bs-toggle="dropdown"
              aria-expanded="false"
            >
              <img
                src="/assets/img/<%= user.ProfileImg %>"
                alt="Profile"
                class="rounded-circle"
                style="width: 40px; height: 40px;"
              />
              <span class="d-none d-md-block dropdown-toggle ps-2">
                <%= user.Username %>
              </span>
            </a>
            <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow profile">
              <li>
                <a class="dropdown-item d-flex align-items-center" href="/profile">
                  <i class="bi bi-person"></i> Profile
                </a>
              </li>
              <li>
                <a class="dropdown-item d-flex align-items-center" href="/settings">
                  <i class="bi bi-gear"></i> Settings
                </a>
              </li>
              <li>
                <hr class="dropdown-divider" />
              </li>
              <li>
                <a class="dropdown-item d-flex align-items-center" href="/logout">
                  <i class="bi bi-box-arrow-right"></i> Logout
                </a>
              </li>
            </ul>
          </li>
          <style>

            .nav-item.dropdown {
              position: relative;
            }
            
            /* Mobile-specific adjustments */
            @media (max-width: 768px) {
              .dropdown-menu.profile {
                position: absolute !important;
                top: 100%;
                left: 0 !important;
                right: auto;
                width: 100%; /* Full width on mobile */
                z-index: 1050;
              }
            
              .nav-profile img {
                width: 32px;
                height: 32px;
              }
            }
            
            /* Ensure dropdown is visible */
            .dropdown-menu.show {
              display: block !important;
              opacity: 1 !important;
              visibility: visible !important;
            }
            
              .nav-profile img {
                width: 32px;
                height: 32px;
              }
            
            /* Ensure dropdown is visible */
            .dropdown-menu.show {
              display: block !important;
              opacity: 1 !important;
              visibility: visible !important;
            }
            
            .nav-profile {
              padding: 5px;
              cursor: pointer;
            }
            
            .nav-profile img {
              width: 36px;
              height: 36px;
              border-radius: 50%;
              border: 2px solid #e9ecef;
            }
            
            .dropdown-menu.profile {
              min-width: 200px;
              padding: 10px 0;
              margin-top: 10px;
              box-shadow: 0 0 30px rgba(1, 41, 112, 0.1);
              border: none;
            }
            
            .dropdown-menu.profile .dropdown-header h6 {
              font-size: 18px;
              margin-bottom: 0;
              font-weight: 600;
              color: #012970;
            }
            
            .dropdown-menu.profile .dropdown-item {
              font-size: 14px;
              padding: 10px 20px;
              transition: 0.3s;
            }
            
            .dropdown-menu.profile .dropdown-item i {
              margin-right: 10px;
              font-size: 18px;
              line-height: 0;
            }
            
            .dropdown-menu.profile .dropdown-item:hover {
              background-color: #f6f9ff;
              color: #012970;
            }
            
            @media (max-width: 768px) {
              .nav-profile {
                padding: 3px;
              }
              
              .nav-profile img {
                width: 32px;
                height: 32px;
              }
              
              .dropdown-menu.profile {
                margin-top: 5px;
              }
            }
            
            .title-section {
                text-align: center;
                padding: 2rem 0;
                margin-bottom: 3rem;
            }
            
            .animated-title {
                font-family: 'Poppins', sans-serif;
                font-size: 4.5rem;
                font-weight: 800;
                background: linear-gradient(45deg, #4361ee, #3f37c9, #7209b7, #3a0ca3);
                background-size: 300% 300%;
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                animation: gradient 8s ease infinite, float 3s ease-in-out infinite;
                text-transform: uppercase;
                letter-spacing: 2px;
                text-shadow: 2px 4px 8px rgba(0, 0, 0, 0.1);
                position: relative;
            }
            
            .animated-title::after {
                content: '';
                position: absolute;
                bottom: -10px;
                left: 50%;
                transform: translateX(-50%);
                width: 100px;
                height: 4px;
                background: linear-gradient(90deg, #4361ee, #3f37c9);
                border-radius: 2px;
                animation: width-animation 3s ease-in-out infinite;
            }
            
            @keyframes gradient {
                0% { background-position: 0% 50%; }
                50% { background-position: 100% 50%; }
                100% { background-position: 0% 50%; }
            }
            
            @keyframes float {
                0% { transform: translateY(0px); }
                50% { transform: translateY(-10px); }
                100% { transform: translateY(0px); }
            }
            
            @keyframes width-animation {
                0% { width: 100px; }
                50% { width: 200px; }
                100% { width: 100px; }
            }
            
            .intro-section {
                background: linear-gradient(135deg, #012970 0%, #0d6efd 100%);
                padding: 3rem 1rem;
                margin-bottom: 2rem;
                position: relative;
                overflow: hidden;
                border-radius: 30px;
                box-shadow: 0 10px 30px rgba(1, 41, 112, 0.2);
                animation: slideIn 0.8s ease-out;
            }
            
            .intro-content {
                position: relative;
                z-index: 2;
                text-align: center;
            }
            
            .glowing-text {
                font-size: clamp(2rem, 5vw, 4.5rem);
                font-weight: 800;
                color: #fff;
                text-transform: uppercase;
                letter-spacing: 2px;
                text-shadow: 0 0 15px rgba(13, 110, 253, 0.5),
                             0 0 25px rgba(13, 110, 253, 0.3);
                margin: 0;
                line-height: 1.2;
                animation: glow 3s ease-in-out infinite alternate,
                           fadeInUp 1s ease-out;
            }
            
            .typing-text {
                color: rgba(255, 255, 255, 0.9);
                font-size: clamp(1rem, 2.5vw, 1.5rem);
                margin-top: 1rem;
                font-weight: 300;
                opacity: 0;
                animation: fadeIn 0.8s ease-out forwards 0.5s;
            }
            
            @keyframes slideIn {
                from {
                    transform: translateY(30px);
                    opacity: 0;
                }
                to {
                    transform: translateY(0);
                    opacity: 1;
                }
            }
            
            @keyframes glow {
                from {
                    text-shadow: 0 0 15px rgba(13, 110, 253, 0.5),
                                 0 0 25px rgba(13, 110, 253, 0.3);
                }
                to {
                    text-shadow: 0 0 20px rgba(13, 110, 253, 0.7),
                                 0 0 30px rgba(13, 110, 253, 0.5),
                                 0 0 40px rgba(13, 110, 253, 0.3);
                }
            }
            
            @keyframes fadeInUp {
                from {
                    transform: translateY(20px);
                    opacity: 0;
                }
                to {
                    transform: translateY(0);
                    opacity: 1;
                }
            }
            
            @keyframes fadeIn {
                from {
                    opacity: 0;
                }
                to {
                    opacity: 1;
                }
            }
            
            /* Keep existing media queries */
            @media (max-width: 768px) {
                .intro-section {
                    padding: 2rem 1rem;
                    margin: 1rem;
                    border-radius: 20px;
                }
                
                .intro-content {
                    padding: 0 10px;
                }
            }
            
            @media (max-width: 480px) {
                .intro-section {
                    padding: 1.5rem 0.5rem;
                }
                
                .typing-text {
                    margin-top: 0.5rem;
                }
            }
            
            .header-nav .nav-link {
              display: flex;
              flex-direction: column;
              align-items: center;
              padding: 8px 12px;
              color: #012970;
              transition: all 0.2s ease;
            }
            
            .header-nav .nav-link:hover {
              color: #0d6efd;
            }
            
            .header-nav .nav-link i {
              font-size: 1.2rem;
              margin-bottom: 2px;
            }
            
            .header-nav .nav-link small {
              font-size: 0.7rem;
              font-weight: 500;
            }
            
            .nav-item {
              margin: 0 4px;
            }
            
            @media (max-width: 768px) {
              .header-nav .nav-link small {
                display: none;
              }
              
              .header-nav .nav-link i {
                font-size: 1.4rem;
                margin-bottom: 0;
              }
            }
            
            .profile-container {
              position: relative;
              display: flex;
              align-items: center;
            }
            
            .recently-joined-badge {
              position: absolute;
              top: -5px;
              right: -5px;
              background-color: #007bff;
              color: white;
              padding: 3px 6px;
              border-radius: 8px;
              font-size: 0.6rem;
              font-weight: 600;
              box-shadow: 0 2px 4px rgba(0,0,0,0.15);
              z-index: 1;
              display: flex;
              align-items: center;
              gap: 3px;
            }
            
            .recently-joined-badge::before {
              content: "🔵";
              font-size: 0.5rem;
            }
            
            .card-header {
              display: flex;
              align-items: center;
              border-bottom: 1px solid #e1e8ed; /* Adjust border color if needed */
            }
            
                .profile-image {
              width: 50px;
              height: 50px;
              border-radius: 50%;
              object-fit: cover;
            }
            
            .col-lg-4 .card {
              position: relative;
              overflow: hidden;
              transition: transform 0.3s ease-out;
            }
            
            .col-lg-4 .card:hover {
              transform: scale(1.05);
            }
            
            .col-lg-4 .card::before {
              content: "";
              position: absolute;
              top: 0;
              left: 0;
              width: 100%;
              height: 100%;
              background: rgba(0, 0, 0, 0.1); /* Darker overlay color */
              opacity: 0;
              transition: opacity 0.3s ease-out;
            }
            
            .col-lg-4 .card:hover::before {
              opacity: 1;
            }
            
            
                            /* Profile container and details */
                    .profile-container {
                      display: flex;
                      align-items: center;
                      text-decoration: none;
                      padding: 10px;
                      border-radius: 10px;
                      background-color: #f9f9f9;
                      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
                      transition: background-color 0.3s ease, transform 0.3s ease;
                    }
            
                    .profile-container:hover {
                      background-color: #e2e2e2;
                      transform: translateY(-3px);
                    }
            
                    .profile-image {
                      width: 60px;
                      height: 60px;
                      border-radius: 50%;
                      object-fit: cover;
                      border: 2px solid #ddd;
                      margin-right: 15px;
                    }
            
                    /* Pagination buttons */
                    .pagination-buttons {
                      display: flex;
                      justify-content: space-between;
                      margin-top: 15px;
                    }
            
                    .arrow-button {
                      background-color: #007bff; /* Blue color */
                      color: white;
                      border: none;
                      border-radius: 5px;
                      padding: 8px 16px;
                      cursor: pointer;
                      font-size: 14px;
                      transition: background-color 0.3s ease, box-shadow 0.3s ease;
                    }
            
                    .arrow-button:disabled {
                      background-color: #cccccc; /* Disabled button styling */
                      cursor: not-allowed;
                    }
            
                    .arrow-button:hover:not(:disabled) {
                      background-color: #0056b3;
                      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15); /* Glowing effect on hover */
                    }
            
            
                    /* Add background to the suggested users section */
                    .suggested-users-container {
                      background-color: white; /* White background */
                      padding: 20px; /* Padding around the content */
                      border-radius: 5px; /* Rounded corners */
                      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */
                    }
            
                    .profile-container {
                      display: flex;
                      align-items: center;
                      text-decoration: none;
                      padding: 10px;
                      border-radius: 10px;
                      background-color: #f9f9f9;
                      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
                      transition: background-color 0.3s ease, transform 0.3s ease;
                    }
            
                    .profile-container:hover {
                      background-color: #e2e2e2;
                      transform: translateY(-3px);
                    }
            
                    .profile-image {
                      width: 60px;
                      height: 60px;
                      border-radius: 50%;
                      object-fit: cover;
                      border: 2px solid #ddd;
                      margin-right: 15px;
                    }
            
                    .profile-details {
                      display: flex;
                      flex-direction: column;
                    }
            
                    .username {
                      font-size: 18px;
                      font-weight: 600;
                      color: #333;
                    }
            
                    .info {
                      font-size: 14px;
                      color: #777;
                    }
            
                    .list-group-item {
                      border: none;
                      padding: 12px 0;
                      background-color: transparent;
                    }
            
                    .list-group-item + .list-group-item {
                      margin-top: 10px;
                    }
            
            
                    .custom-h1 {
                      font-size: 5rem; /* Adjust the size as needed for <h2> */
                      font-weight: bold; /* Ensure bold text */
                      text-align: center; /* Center text *//* Adjust margin if needed */
                      margin-bottom: 2rem;  /* Adjust margin if needed */
                    }
            
                      .custom-h2 {
                      font-size: 2rem; /* Adjust the size as needed for <h2> */
                      font-weight: bold; /* Ensure bold text */
                      text-align: center; /* Center text */
                      margin-bottom: 1rem; /* Adjust margin if needed */
                    } 
            
                    .custom-h3 {
                      font-size: 1.5rem; /* Adjust the size as needed for <h2> */
                      font-weight: bold; /* Ensure bold text */
                      text-align: center; /* Center text */
                      margin-bottom: 1rem; /* Adjust margin if needed */
                    }
            
                    .card-title-center {
                      text-align: center;
                    }
            
                    .suggested-users {
                        background-color: #f9f9f9;
                        padding: 15px;
                        border-radius: 8px;
                    }
            
                    .suggested-users h5 {
                        margin-bottom: 15px;
                    }
            
                    .list-group-item {
                        border: none;
                        padding: 10px 0;
                    }
            
                    .list-group-item a {
                        text-decoration: none;
                        color: #007bff;
                    }
            
                    .list-group-item a:hover {
                        color: #0056b3;
                    }
            
                    .fixed-card-image {
                        position: relative;
                        overflow: hidden;
                    }
            
                    .fixed-card-image img {
                        width: 100%;
                        height: auto;
                        max-height: 200px; /* Set the maximum height as needed */
                        object-fit: cover;
                    }
                      
                    .disclaimer {
                        text-align: center;
                        margin-top: 20px;
                        font-style: italic;
                        color: grey /* Adjust the color as per your design */
                    }
            
                    /* Enhanced Post Card Styles */
                    .post-link {
                      text-decoration: none;
                      color: inherit;
                      display: block;
                      height: 100%;
                    }
            
                    .post-card {
                      background: white;
                      border-radius: 12px;
                      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                      overflow: hidden;
                      transition: all 0.3s ease;
                      height: 100%;
                      display: flex;
                      flex-direction: column;
                    }
            
                    .post-card:hover {
                      transform: translateY(-5px);
                      box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
                    }
            
                    .post-header {
                      display: flex;
                      align-items: center;
                      padding: 12px;
                      background: #f8f9fa;
                      border-bottom: 1px solid #eee;
                    }
            
                    .profile-info {
                      margin-left: 12px;
                    }
            
                    .profile-info .username {
                      font-weight: 600;
                      margin: 0;
                      color: #333;
                    }
            
                    .profile-info .department {
                      font-size: 0.85rem;
                      color: #666;
                      margin: 0;
                    }
            
                    .post-image-container {
                      position: relative;
                      padding-top: 75%; /* 4:3 Aspect Ratio */
                      overflow: hidden;
                    }
            
                    .post-image {
                      position: absolute;
                      top: 0;
                      left: 0;
                      width: 100%;
                      height: 100%;
                      object-fit: cover;
                      transition: transform 0.3s ease;
                    }
            
                    .post-card:hover .post-image {
                      transform: scale(1.05);
                    }
            
                    .post-content {
                      padding: 16px;
                      flex-grow: 1;
                      background: white;
                    }
            
                    .post-title {
                      font-size: 1.1rem;
                      font-weight: 600;
                      margin-bottom: 8px;
                      color: #2c3e50;
                    }
            
                    .post-caption {
                      font-size: 0.9rem;
                      color: #666;
                      margin-bottom: 8px;
                      display: -webkit-box;
                      -webkit-line-clamp: 2;
                      -webkit-box-orient: vertical;
                      overflow: hidden;
                    }
            
                    .post-tags {
                      font-size: 0.85rem;
                      color: #007bff;
                      margin: 0;
                    }
            
                    /* Responsive adjustments */
                    @media (max-width: 768px) {
                      .col-12 {
                        padding: 0 10px;
                      }
                      
                      .post-card {
                        margin-bottom: 20px;
                      }
                    }
            
            /* Poll Card Styles */
            .poll-card {
              border: none;
              box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);
              transition: transform 0.3s ease;
              border-radius: 12px;
              overflow: hidden;
            }
            
            .poll-card:hover {
              transform: translateY(-5px);
            }
            
            .poll-header {
              background-color: #fff;
              border-bottom: 1px solid rgba(0, 0, 0, 0.1);
              padding: 1rem;
            }
            
            .poll-image {
              height: 200px;
              object-fit: cover;
            }
            
            .card-title {
              color: #012970;
              font-weight: 600;
              margin-bottom: 1rem;
            }
            
            .description {
              color: #6c757d;
              font-size: 0.95rem;
              margin-bottom: 1.5rem;
            }
            
            .poll-details {
              margin-top: 10px;
            }
            
            .poll-details p {
              margin-bottom: 8px;
              color: #666;
              font-size: 0.9rem;
              display: flex;
              align-items: center;
              gap: 8px;
            }
            
            .poll-details i {
              color: #012970;
              font-size: 1rem;
            }
            
            .join-poll-btn {
              background: #012970;
              border: none;
              padding: 8px;
              font-weight: 500;
              transition: all 0.3s ease;
            }
            
            .join-poll-btn:hover {
              background: #1a3d8d;
              transform: translateY(-2px);
              box-shadow: 0 5px 15px rgba(1, 41, 112, 0.2);
            }
            
            .section-title {
              color: #012970;
              font-weight: 600;
              position: relative;
              padding-bottom: 0.5rem;
              margin-bottom: 2rem;
            }
            
            .section-title::after {
              content: '';
              position: absolute;
              left: 0;
              bottom: 0;
              height: 3px;
              width: 50px;
              background: #012970;
            }
            
            /* Responsive adjustments */
            @media (max-width: 768px) {
              .poll-card {
                margin-bottom: 1rem;
              }
              
              .poll-image {
                height: 180px;
              }
            }
            
            /* Animation */
            .poll-card {
              animation: fadeIn 0.5s ease-in;
            }
            
            @keyframes fadeIn {
              from { 
                opacity: 0; 
                transform: translateY(20px); 
              }
              to { 
                opacity: 1; 
                transform: translateY(0); 
              }
            }
            
            .participant-card {
              background: #ffffff;
              transition: all 0.2s ease;
              border: 1px solid #dee2e6;
            }
            
            .participant-card:hover {
              background: #f8f9fa;
              transform: translateX(3px);
              box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            }
            
            .participants-section {
              background: #fff;
              border-radius: 8px;
              padding: 15px;
              box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            }
            
            .progress {
              background-color: #e9ecef;
              border-radius: 5px;
              overflow: hidden;
            }
            
            .progress-bar {
              transition: width 0.6s ease;
            }
            
            .participant-info {
              line-height: 1.2;
            }
            
            .badge {
              padding: 0.5em 1em;
              border-radius: 20px;
            }
            
            .college-connect-title {
                font-family: 'Poppins', sans-serif;
                font-weight: 700;
                font-size: 1.8rem;
                background: linear-gradient(45deg, #4361ee, #3f37c9);
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                text-transform: uppercase;
                letter-spacing: 1px;
                margin-left: 10px;
                text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
              }
            
              .logo-container {
                display: flex;
                align-items: center;
                gap: 10px;
              }
            
              .logo img {
                transition: transform 0.3s ease;
              }
            
              .logo:hover img {
                transform: scale(1.05);
              }
            
              .header {
                box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
                background: rgba(255, 255, 255, 0.95);
                backdrop-filter: blur(10px);
              }
              </style>
          <style>
    
    .notification-item[data-notification-type="post-delete"],
    .notification-item[data-notification-type="poll-delete"] {
        background-color: #fff3f3;
        border-left: 3px solid #dc3545;
    }
    
    .notification-item[data-notification-type="post-delete"]:hover,
    .notification-item[data-notification-type="poll-delete"]:hover {
        background-color: #ffe9e9;
    }
    
            .notification-username {
        font-weight: 600;
        color: #012970;
        margin-right: 5px;
    }
    
    .notification-item[data-notification-type="comment"] {
        background-color: #f8f9fa;
        border-left: 3px solid #4154f1;
    }
    
    .notification-item[data-notification-type="comment"]:hover {
        background-color: #e9ecef;
    }
    
          .notifications {
            min-width: 300px;
            max-width: 350px;
            padding: 10px;
            box-shadow: 0 0 24px 0 rgba(0, 0, 0, 0.12);
          }
          
          .notification-scroll {
            max-height: 400px;
            overflow-y: auto;
            scrollbar-width: thin;
            scrollbar-color: #4154f1 #f6f9ff;
          }
          
          .notification-scroll::-webkit-scrollbar {
            width: 5px;
          }
          
          .notification-scroll::-webkit-scrollbar-track {
            background: #f6f9ff;
          }
          
          .notification-scroll::-webkit-scrollbar-thumb {
            background-color: #4154f1;
            border-radius: 20px;
          }
          
          .notification-item {
            display: flex;
            align-items: flex-start;
            padding: 15px;
            border-bottom: 1px solid #f6f9ff;
            transition: all 0.3s ease;
            cursor: pointer;
            position: relative;
          }
          
          .notification-item:hover {
            background: #f6f9ff;
          }
          
          .notification-item .delete-notification {
            position: absolute;
            top: 5px;
            right: 5px;
            padding: 3px 6px;
            font-size: 12px;
            opacity: 0;
            transition: opacity 0.3s ease;
          }
          
          .notification-item:hover .delete-notification {
            opacity: 1;
          }
          
          .notification-content {
            flex: 1;
            margin-left: 15px;
          }
          
          .notification-title {
            font-size: 14px;
            font-weight: 600;
            margin-bottom: 5px;
            color: #012970;
          }
          
          .notification-message {
            font-size: 13px;
            color: #666;
            margin-bottom: 5px;
          }
          
          .notification-time {
            font-size: 11px;
            color: #919191;
          }
          
          .dropdown-header {
            text-align: center;
            padding: 10px;
            font-size: 15px;
            font-weight: 600;
            color: #012970;
          }
          
          .dropdown-footer {
            text-align: center;
            padding: 10px;
            border-top: 1px solid #f6f9ff;
          }
          
          .clear-all {
            width: 100%;
            background: #dc3545;
            border: none;
            color: white;
            padding: 8px;
            border-radius: 4px;
            transition: all 0.3s ease;
          }
          
          .clear-all:hover {
            background: #bb2d3b;
          }
    
          .notification-item[data-notification-type="poll-join"] {
            background-color: #f8f9fa;
            border-left: 3px solid #28a745;
          }
    
          .notification-item[data-notification-type="poll-leave"] {
            background-color: #f8f9fa;
            border-left: 3px solid #dc3545;
          }
    
          .notification-message.leave {
              color: #dc3545;
          }
    
          </style>
          <script>
            function getNotifications(callback) {
      fetch('/api/get-notifications')
        .then(response => {
          if (!response.ok) throw new Error('Network response was not ok');
          return response.json();
        })
        .then(data => {
          callback(data.Notifications || []);
        })
        .catch(error => {
          console.error('Error fetching notifications:', error);
          callback([]);
        });
    }
    // Function to display notifications in the UI
    function displayNotifications() {
        getNotifications(function (notifications) {
            const notificationDiv = document.getElementById("notification-list");
            if (!notificationDiv) return;
    
            notificationDiv.innerHTML = ""; // Clear existing notifications
    
            notifications.forEach(function (notification) {
                const listItem = document.createElement("div");
                listItem.className = "notification-item";
                listItem.setAttribute("data-notification-id", notification._id);
    
                const timeAgo = timeSince(new Date(notification.timestamp));
    
                let notificationHTML = "";
    
                // Handle 'post-delete' and 'poll-delete'
                if (notification.type === "post-delete" || notification.type === "poll-delete") {
                    listItem.setAttribute("data-notification-type", notification.type);
                    notificationHTML = `
                        <img src="/assets/img/${notification.sender?.ProfileImg || "default-admin.jpg"}"
                             class="profile-image" alt="Profile" style="width: 40px; height: 40px;">
                        <div class="notification-content">
                            <div class="notification-message">
                                <span class="notification-username">Admin</span>
                                ${notification.message}
                            </div>
                            <div class="notification-time">${timeAgo}</div>
                        </div>
                        <button class="btn btn-sm btn-danger delete-notification">
                            <i class="bi bi-x"></i>
                        </button>
                    `;
                } 
                // Handle 'poll-join' and 'poll-leave'
                else if (notification.type === "poll-join" || notification.type === "poll-leave") {
                    const senderName = notification.sender?.Username || 
                        (notification.sender?.FirstName && notification.sender?.LastName
                            ? `${notification.sender.FirstName} ${notification.sender.LastName}`
                            : "Unknown User");
    
                    notificationHTML = `
                        <img src="/assets/img/${notification.sender?.ProfileImg || "default.jpg"}"
                             class="profile-image" alt="Profile" style="width: 40px; height: 40px;">
                        <div class="notification-content">
                            <div class="notification-message ${notification.type === 'poll-leave' ? 'leave' : ''}">
                                <span class="notification-username">${senderName}</span>
                                ${notification.type === 'poll-join' ? 'has joined your poll' : 'has left your poll'}
                                <br>
                                <small class="text-muted">Poll: ${notification.pollTitle || 'Untitled Poll'}</small>
                            </div>
                            <div class="notification-time">${timeAgo}</div>
                        </div>
                        <button class="btn btn-danger btn-sm delete-notification" 
                                onclick="deleteNotification('${notification._id}', event)"
                                style="padding: 2px 5px; font-size: 0.7rem;">
                            <i class="bi bi-trash" style="font-size: 0.7rem;"></i>
                        </button>
                    `;
                } 
                // Handle other notification types
                else {
                    const senderName = notification.sender?.FirstName && notification.sender?.LastName
                        ? `${notification.sender.FirstName} ${notification.sender.LastName}`
                        : "Unknown User";
    
                    const messageWithoutName = notification.message.replace(
                        `${senderName}`, ""
                    ).trim();
    
                    notificationHTML = `
                        <img src="/assets/img/${notification.sender?.ProfileImg || 'default.jpg'}" 
                             class="profile-image" alt="Profile" style="width: 40px; height: 40px;">
                        <div class="notification-content">
                            <div class="notification-message">
                                <span class="notification-username">${senderName}</span>
                                ${messageWithoutName}
                            </div>
                            <div class="notification-time">${timeAgo}</div>
                        </div>
                        <button class="btn btn-danger btn-sm delete-notification" 
                                onclick="deleteNotification('${notification._id}', event)"
                                style="padding: 2px 5px; font-size: 0.7rem;">
                            <i class="bi bi-trash" style="font-size: 0.7rem;"></i>
                        </button>
                    `;
                }
    
                // Set HTML and add event listeners
                listItem.innerHTML = notificationHTML;
                listItem.addEventListener("click", (e) => {
                    if (!e.target.closest(".delete-notification")) {
                        if (notification.type === "poll-join" || notification.type === "poll-leave") {
                            window.location.href = `/poll/${notification.pollId}`;
                        } else {
                            handleNotificationClick(notification._id);
                        }
                    }
                });
    
                listItem.style.cursor = "default";
                notificationDiv.appendChild(listItem);
            });
    
            // Update badge and header
            const badgeNumber = document.getElementById("badge-number");
            const dropdownHeader = document.getElementById("dropdown-header");
    
            if (badgeNumber) badgeNumber.textContent = notifications.length;
            if (dropdownHeader) {
                dropdownHeader.textContent =
                    notifications.length > 0
                        ? `You have ${notifications.length} notification(s)`
                        : "No Notifications";
            }
        });
    }
    
    
    function timeSince(date) {
        const seconds = Math.floor((new Date() - date) / 1000);
    
        if (seconds < 60) {
            return `${seconds} seconds ago`;
        }
    
        const minutes = Math.floor(seconds / 60);
        if (minutes < 60) {
            return `${minutes} minute${minutes > 1 ? 's' : ''} ago`;
        }
    
        const hours = Math.floor(minutes / 60);
        if (hours < 24) {
            return `${hours} hour${hours > 1 ? 's' : ''} ago`;
        }
    
        const days = Math.floor(hours / 24);
        if (days < 30) {
            return `${days} day${days > 1 ? 's' : ''} ago`;
        }
    
        const months = Math.floor(days / 30);
        if (months < 12) {
            return `${months} month${months > 1 ? 's' : ''} ago`;
        }
    
        const years = Math.floor(months / 12);
        return `${years} year${years > 1 ? 's' : ''} ago`;
    }
    
    async function deleteNotification(notificationId, event) {
      event.stopPropagation();
      try {
        await fetch(`/api/delete-notification/${notificationId}`, { method: 'DELETE' });
        displayNotifications();
      } catch (error) {
        console.error('Error deleting notification:', error);
      }
    }
    
    document.querySelector('.clear-all')?.addEventListener('click', async () => {
      try {
        await fetch('/api/clear-notifications', { method: 'DELETE' });
        displayNotifications();
      } catch (error) {
        console.error('Error clearing notifications:', error);
      }
    });
    
    document.addEventListener('DOMContentLoaded', () => {
      displayNotifications();
      setInterval(displayNotifications, 30000); // Refresh every 30 seconds
    });
          </script>
          
          
          <script>
            document.addEventListener("DOMContentLoaded", function () {
              // Initialize all dropdowns
              var dropdownElementList = [].slice.call(
                document.querySelectorAll('[data-bs-toggle="dropdown"]')
              );
              var dropdownList = dropdownElementList.map(function (dropdownToggleEl) {
                return new bootstrap.Dropdown(dropdownToggleEl);
              });
            });
            </script>
      </nav><!-- End Icons Navigation -->
      <script>
        async function handleNotificationClick(notificationId) {
          try {
            // Mark notification as read
            await fetch(`/api/mark-notification-read/${notificationId}`, {
              method: 'POST'
            });
      
            // Get redirect URL
            const response = await fetch(`/api/notification-redirect/${notificationId}`);
            const data = await response.json();
            
            if (data.success && data.redirectUrl) {
              window.location.href = data.redirectUrl;
            }
          } catch (error) {
            console.error('Error handling notification click:', error);
          }
        }
      
        // Update your notification item click handler
        document.querySelectorAll('.notification-item').forEach(item => {
          item.addEventListener('click', function() {
            const notificationId = this.dataset.notificationId;
            handleNotificationClick(notificationId);
          });
        });
      </script>
      <% } else { %>
        <!-- Sidebar for Admin -->
        <div class="sidebar">
          <div class="sidebar-header">
              <div class="sidebar-brand">
                  <i class="bi bi-shield-lock"></i>
                  Admin Dashboard
              </div>
          </div>
          <ul class="nav flex-column">
              <li class="nav-item">
                  <a class="nav-link" href="/admin/">
                      <i class="bi bi-grid"></i> Overview
                  </a>
              </li>
              <li class="nav-item">
                  <a class="nav-link" href="/admin/users">
                      <i class="bi bi-people"></i> Manage Users
                  </a>
              </li>
              <li class="nav-item">
                  <a class="nav-link" href="/admin/events">
                      <i class="bi bi-calendar-event"></i> Events
                  </a>
              </li>
              <li class="nav-item">
                  <a class="nav-link" href="/admin/logout">
                      <i class="bi bi-box-arrow-right"></i> Logout
                  </a>
              </li>
          </ul>
      </div>
          <style>
            <style>
              .sidebar {
        position: fixed;
        top: 0;
        left: 0;
        bottom: 0;
        width: 280px;
        background: white;
        box-shadow: 0 0 20px rgba(0,0,0,0.05);
        padding: 30px 20px;
        z-index: 100;
        transition: all 0.3s ease;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        overflow-y: auto; /* Ensure content is scrollable if it overflows */
    }

        .sidebar-header {
            padding-bottom: 20px;
            margin-bottom: 20px;
            border-bottom: 1px solid rgba(0,0,0,0.05);
        }

        .sidebar-brand {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--primary-color);
            display: flex;
            align-items: center;
            margin-bottom: 5px;
        }

        .sidebar-brand i {
            font-size: 1.8rem;
            margin-right: 10px;
        }

        .nav-link {
            display: flex;
            align-items: center;
            padding: 10px 15px;
            margin-bottom: 10px;
            border-radius: 8px;
            color: var(--dark-color);
            text-decoration: none;
            transition: background-color 0.3s ease;
        }

        .nav-link.active, .nav-link:hover {
            background: linear-gradient(135deg, #4361ee, #4895ef);
            color: white;
        }

        .nav-link i {
            margin-right: 10px;
            font-size: 1.2rem;
        }

        .app-container {
        margin-left: 280px; /* Adjust the margin to accommodate the sidebar */
        max-width: calc(100% - 280px); /* Ensure the content doesn't overlap */
    }

        /* Responsive adjustments */
        @media (max-width: 768px) {
        .sidebar {
            width: 100%;
            height: auto;
            position: relative;
        }

        .app-container {
            margin-left: 0;
            max-width: 100%;
        }
    }
          </style>
        <% } %>
    </header>
  
    </header><!-- End Header -->
  
    <main id="main" class="main">
        <div class="container">
            <!-- Add search results title -->
            <h2 class="search-title">Results for "<%= query %>"</h2>
            <div class="filter-container">
              <form class="filter-form" method="GET" action="<%= isAdmin ? '/admin/users' : '/search' %>">
                <div class="filter-row">
                  <div class="filter-group">
                    <div class="input-wrapper">
                      <i class="bi bi-search"></i>
                      <input type="text" name="query" value="<%= query || '' %>" placeholder="Search users" class="filter-input">
                    </div>
                  </div>
                  
                  <div class="filter-group">
                    <div class="select-wrapper">
                      <i class="bi bi-building"></i>
                      <select name="department" class="filter-select">
                        <option value="">All Departments</option>
                        <% if (departments && departments.length > 0) { %>
                          <% departments.forEach(function(dept) { %>
                            <option value="<%= dept %>" <%= (department === dept) ? 'selected' : '' %>><%= dept %></option>
                          <% }); %>
                        <% } %>
                      </select>
                    </div>
                  </div>
                  
                  <div class="filter-group">
                    <div class="select-wrapper">
                      <i class="bi bi-calendar3"></i>
                      <select name="year" class="filter-select">
                        <option value="">All Years</option>
                        <% if (years && years.length > 0) { %>
                          <% years.forEach(function(yr) { %>
                            <option value="<%= yr %>" <%= (year === yr.toString()) ? 'selected' : '' %>>Year <%= yr %></option>
                          <% }); %>
                        <% } %>
                      </select>
                    </div>
                  </div>
                  
                  <div class="filter-group">
                    <button type="submit" class="filter-button">
                      <i class="bi bi-funnel"></i> Filter
                    </button>
                  </div>
                </div>
              </form>
            </div>
            <div class="row">
              <div id="list" class="list" data-searchable>
                <% if (users && users.length > 0) { %>
                    <% users.forEach(function(searchUser) { %>
                        <% if (searchUser.Role !== 'admin') { %>
                          <div class="list-item <%= searchUser.status === 'banned' ? 'banned' : '' %>" data-user-id="<%= searchUser._id %>">
                                <div class="list-item__avatar">
                                    <img src="/assets/img/<%= searchUser.ProfileImg %>" alt="Profile">
                                    <% if (searchUser.status === 'banned') { %>
                                        <div class="banned-badge">
                                            <i class="bi bi-shield-x"></i> Banned
                                        </div>
                                    <% } %>
                                </div>
                                <div class="list-item__content">
                                    <div class="list-item__header">
                                        <strong class="list-item__name">
                                            <%= searchUser.FirstName %> <%= searchUser.LastName %>
                                        </strong>
                                    </div>
                                    <div class="list-item__info">
                                      <div class="info-row">
                                          <span class="info-text">
                                              <i class="bi bi-mortarboard"></i> <%= searchUser.department %>
                                          </span>
                                          <span class="info-text">
                                              <i class="bi bi-calendar3"></i> Year <%= searchUser.year %>
                                          </span>
                                      </div>
                                      <div class="stats">
                                          <span><i class="bi bi-people"></i> <%= searchUser.followersCount || 0 %> Followers</span>
                                          <span><i class="bi bi-person-plus"></i> <%= searchUser.followingCount || 0 %> Following</span>
                                      </div>
                                  </div>
                                  <div class="action-buttons">
                                    <% if (searchUser.status === 'banned') { %>
                                        <button class="btn btn-secondary" disabled>
                                            <i class="bi bi-shield-x"></i> Account Banned
                                        </button>
                                        <% if (isAdmin) { %>
                                            <button class="btn btn-success" onclick="unbanUser('<%= searchUser._id %>')">
                                                <i class="bi bi-shield-check"></i> Unban User
                                            </button>
                                        <% } %>
                                        <% } else { %>
                                          <% if (!isAdmin) { %> <!-- Check if the current user is not an admin -->
                                              <a href="/profileview/<%= searchUser._id %>" class="btn btn-primary">
                                                  <i class="bi bi-person"></i> View Profile
                                              </a>
                                          <% } %>
                                        <% if (isAdmin) { %>
                                            <button class="btn btn-danger" onclick="openBanModal('<%= searchUser._id %>')">
                                                <i class="bi bi-shield-x"></i> Ban User
                                            </button>
                                        <% } %>
                                    <% } %>
                                </div>
                                </div>
                            </div>
                        <% } %>
                    <% }); %>
                <% } else { %>  
                  <div class="no-results">
                    <i class="bi bi-search"></i>
                    <p>No users found matching "<%= query %>"</p>
                    <span>Try searching with a different username or department</span>
                  </div>
                <% } %>
              </div>
            </div>
        </div>
        <script>
          let userToBan = null;
          function openBanModal(userId) {
    const userCard = document.querySelector(`[data-user-id="${userId}"]`);
    const userName = userCard.querySelector('.list-item__name').textContent.trim();
    const userDept = userCard.querySelector('.info-text:first-child').textContent.trim();
    const userYear = userCard.querySelector('.info-text:last-child').textContent.trim();

    document.getElementById('userToBanId').value = userId;
    document.getElementById('userDetails').innerHTML = `
        <p><strong>User:</strong> ${userName}</p>
        <p><strong>Department:</strong> ${userDept}</p>
        <p><strong>Year:</strong> ${userYear}</p>
    `;

    const modal = new bootstrap.Modal(document.getElementById('banUserModal'));
    modal.show();
}

// Function to handle ban reason select change
document.getElementById('banReason').addEventListener('change', function() {
    const otherReasonDiv = document.getElementById('otherReasonDiv');
    if (this.value === 'Other') {
        otherReasonDiv.classList.remove('d-none');
    } else {
        otherReasonDiv.classList.add('d-none');
    }
});
</script>
    </main>
  
    <!-- ======= Footer ======= -->
    <footer id="footer" class="footer">
      <div class="copyright">
        © Copyright <strong><span>College Connect</span></strong>. All Rights Reserved
      </div>
      <div class="credits">
        <!-- All the links in the footer should remain intact. -->
        <!-- You can delete the links only if you purchased the pro version. -->
        <!-- Licensing information: https://bootstrapmade.com/license/ -->
        <!-- Purchase the pro version with working PHP/AJAX contact form: https://bootstrapmade.com/nice-admin-bootstrap-admin-html-template/ -->
      </div>
    </footer><!-- End Footer -->
  
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
  
    <!-- Vendor JS Files -->
    <script src="/assets/vendor/apexcharts/apexcharts.min.js"></script>
    <script src="/assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/vendor/chart.js/chart.umd.js"></script>
    <script src="/assets/vendor/echarts/echarts.min.js"></script>
    <script src="/assets/vendor/quill/quill.min.js"></script>
    <script src="/assets/vendor/simple-datatables/simple-datatables.js"></script>
    <script src="/assets/vendor/tinymce/tinymce.min.js"></script>
    <script src="/assets/vendor/php-email-form/validate.js"></script>
  
    <!-- Template Main JS File -->
    <script src="/assets/js/main.js"></script>
<!-- Remove the first two modal definitions and keep only this one -->
<div class="modal fade" id="banUserModal" tabindex="-1">
  <div class="modal-dialog">
      <div class="modal-content">
          <div class="modal-header">
              <h5 class="modal-title">Ban User</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
              <div id="userDetails" class="user-details mb-3"></div>
              <form id="banUserForm">
                  <input type="hidden" id="userToBanId" name="userId">
                  <div class="mb-3">
                      <label for="banReason" class="form-label">Select Reason for Ban</label>
                      <select class="form-select" id="banReason" name="reason" required>
                          <option value="">Choose a reason...</option>
                          <option value="Inappropriate Content">Inappropriate Content</option>
                          <option value="Harassment">Harassment or Bullying</option>
                          <option value="Spam">Spam or Misleading Content</option>
                          <option value="Fake Profile">Fake Profile</option>
                          <option value="Violation of Terms">Violation of Terms of Service</option>
                          <option value="Other">Other</option>
                      </select>
                      <div id="otherReasonDiv" class="mt-3 d-none">
                          <label for="otherReason" class="form-label">Specify Other Reason</label>
                          <textarea class="form-control" id="otherReason" rows="3"></textarea>
                      </div>
                  </div>
              </form>
          </div>
          <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
              <button type="button" class="btn btn-danger" onclick="confirmBanUser()">Ban User</button>
          </div>
      </div>
  </div>
</div>
<script>
  async function unbanUser(userId) {
    try {
        const response = await fetch('/api/unban-user', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            credentials: 'include',
            body: JSON.stringify({ userId: userId })
        });

        const data = await response.json();
        
        if (response.ok) {
            Swal.fire({
                icon: 'success',
                title: 'User Unbanned',
                text: 'The user has been unbanned successfully.',
                showConfirmButton: false,
                timer: 2000
            }).then(() => {
                location.reload();
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Unban Failed',
                text: data.message || 'Failed to unban user. Please try again.'
            });
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An unexpected error occurred. Please try again.'
        });
    }
}
</script>
<script>
  async function confirmBanUser() {
    const reasonSelect = document.getElementById('banReason');
    const otherReasonText = document.getElementById('otherReason');
    let reason = reasonSelect.value;
    const userId = document.getElementById('userToBanId').value;
    const banButton = document.querySelector('[onclick="confirmBanUser()"]');
    const modal = document.getElementById('banUserModal');

    // Validation for reason
    if (reason === '') {
        Swal.fire({
            icon: 'warning',
            title: 'Required',
            text: 'Please select a reason for the ban'
        });
        return;
    }

    if (reason === 'Other') {
        if (!otherReasonText.value.trim()) {
            Swal.fire({
                icon: 'warning',
                title: 'Required',
                text: 'Please specify the other reason'
            });
            return;
        }
        reason = otherReasonText.value.trim();
    }

    // Show confirmation dialog
    const result = await Swal.fire({
        title: 'Confirm Ban',
        text: 'Are you sure you want to ban this user?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#dc3545',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Yes, ban user',
        cancelButtonText: 'Cancel'
    });

    if (!result.isConfirmed) return;

    // Disable button and show loading state
    banButton.disabled = true;
    banButton.innerHTML = '<i class="bi bi-hourglass-split"></i> Processing...';

    try {
        const response = await fetch('/api/ban-user', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            credentials: 'include',
            body: JSON.stringify({
                userId: userId,
                reason: reason
            })
        });

        const data = await response.json();
        
        if (response.ok) {
            Swal.fire({
                icon: 'success',
                title: 'User Banned',
                text: 'The user has been banned successfully',
                showConfirmButton: false,
                timer: 2000,
                timerProgressBar: true,
                didClose: () => {
                    bootstrap.Modal.getInstance(modal).hide();
                    location.reload();
                }
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Ban Failed',
                text: data.message || 'Failed to ban user. Please try again.'
            });
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An unexpected error occurred. Please try again.'
        });
    } finally {
        banButton.disabled = false;
        banButton.innerHTML = 'Ban User';
    }
}
</script>
  <svg id="SvgjsSvg1001" width="2" height="0" xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev" style="overflow: hidden; top: -100%; left: -100%; position: absolute; opacity: 0;"><defs id="SvgjsDefs1002"></defs><polyline id="SvgjsPolyline1003" points="0,0"></polyline><path id="SvgjsPath1004" d="M0 0 "></path></svg></body></html>

<style>
    @import url('https://fonts.googleapis.com/css?family=Karla:400,700');

    .info-row {
    display: flex;
    justify-content: center;
    gap: 2rem;
    margin-bottom: 1rem;
}

.info-text {
    color: #597191;
    font-size: 1.4rem;
    display: flex;
    align-items: center;
}

.info-text i {
    margin-right: 0.5rem;
    color: #3384f3;
}

    .container {
        max-width: 1200px;
        margin: 6rem auto 2rem;
        padding: 0 2rem;
    }

    .search-title {
        text-align: center;
        color: #002b5d;
        font-size: 2.4rem;
        margin-bottom: 3rem;
        font-weight: 600;
        position: relative;
        padding-bottom: 1rem;
    }

    .search-title::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
        width: 60px;
        height: 3px;
        background: #3384f3;
        border-radius: 2px;
    }

    .list {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 2rem;
    padding: 1rem;
}

.list-item {
    background: #fff;
    border-radius: 12px;
    padding: 2rem;
    box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    overflow: hidden;
}

.list-item__avatar {
    position: relative;
    margin-bottom: 1.5rem;
    width: 150px;
    height: 150px;
}

    .banned-badge {
    position: absolute;
    top: 0;
    right: 0;
    background: #dc3545;
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.9rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    box-shadow: 0 2px 10px rgba(220, 53, 69, 0.3);
    animation: fadeIn 0.3s ease-in-out;
}

.banned-badge i {
    font-size: 1rem;
}

.list-item.banned {
    opacity: 0.8;
}

.list-item.banned::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(220, 53, 69, 0.05);
    border-radius: 12px;
    pointer-events: none;
    z-index: 1; /* Add z-index */
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

    .list-item__avatar img {
        width: 150px;  /* Increased size */
        height: 150px; /* Increased size */
        border-radius: 50%;
        border: 3px solid #3384f3;
        padding: 3px;
        object-fit: cover;
    }

    .list-item__header {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    .list-item__name {
        font-size: 2rem;
        color: #002b5d;
        text-align: center;
    }

    .list-item__info {
        margin-bottom: 1.5rem;
    }

    .info-text {
        color: #597191;
        margin: 0.5rem 0;
        font-size: 1.4rem;
    }

    .info-text i {
        margin-right: 0.5rem;
        color: #3384f3;
    }

    .stats {
        display: flex;
        justify-content: center;
        gap: 2rem;
        margin-top: 1rem;
    }

    .stats span {
        color: #597191;
        font-size: 1.4rem;
    }

    .stats i {
        margin-right: 0.5rem;
        color: #3384f3;
    }

    .list-item__button {
        padding: 0.6rem 1.5rem;
        border-radius: 50px;
        border: none;
        font-size: 1.4rem;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .follow-btn {
        background: #3384f3;
        color: white;
    }

    .follow-btn:hover {
        background: #1a6cd1;
    }

    .unfollow-btn {
        background: #e1e4ea;
        color: #597191;
    }

    .unfollow-btn:hover {
        background: #d63031;
        color: white;
    }

    .view-profile-btn {
        display: inline-block;
        width: 100%;
        padding: 1rem;
        text-align: center;
        background: #f6f7f9;
        color: #3384f3;
        text-decoration: none;
        border-radius: 8px;
        margin-top: 1rem;
        transition: all 0.3s ease;
    }

    .view-profile-btn:hover {
        background: #3384f3;
        color: white;
    }

    .no-results {
        grid-column: 1 / -1;
        text-align: center;
        padding: 6rem;
        color: #597191;
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
    }

    .no-results i {
        font-size: 5rem;
        margin-bottom: 2rem;
        color: #3384f3;
    }

    .no-results p {
        font-size: 2rem;
        margin-bottom: 1rem;
        color: #002b5d;
    }

    .no-results span {
        font-size: 1.4rem;
        color: #597191;
    }

    .action-buttons {
    position: relative;
    z-index: 2;
}

.list-item.banned .btn-success {
    position: relative;
    z-index: 2;
    pointer-events: auto;
    opacity: 1;
}

    .action-buttons .btn {
        display: inline-block;
        width: 100%;
        padding: 1rem;
        text-align: center;
        background: #f6f7f9;
        color: #3384f3;
        text-decoration: none;
        border-radius: 8px;
        transition: all 0.3s ease;
        border: none;
    }

    .action-buttons .btn:hover {
        background: #3384f3;
        color: white;
    }

    .action-buttons .btn-danger {
        background: #f6f7f9;
        color: #dc3545;
    }

    .action-buttons .btn-danger:hover {
        background: #dc3545;
        color: white;
    }

    /* Enhanced Filter Styles */
.filter-container {
    background: #fff;
    border-radius: 12px;
    padding: 1.5rem;
    margin-bottom: 2.5rem;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
}

.filter-row {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    align-items: center;
}

.filter-group {
    flex: 1;
    min-width: 180px;
}

.input-wrapper, .select-wrapper {
    position: relative;
}

.input-wrapper i, .select-wrapper i {
    position: absolute;
    left: 12px;
    top: 50%;
    transform: translateY(-50%);
    color: #3384f3;
    font-size: 1.2rem;
}

.filter-input, .filter-select {
    width: 100%;
    padding: 0.8rem 1rem 0.8rem 2.5rem;
    border: 1px solid #e1e4ea;
    border-radius: 8px;
    font-size: 1rem;
    color: #495057;
    transition: all 0.3s ease;
}

.filter-input:focus, .filter-select:focus {
    border-color: #3384f3;
    box-shadow: 0 0 0 0.2rem rgba(51, 132, 243, 0.25);
    outline: none;
}

.filter-button {
    background: #3384f3;
    color: white;
    border: none;
    border-radius: 8px;
    padding: 0.8rem 1.5rem;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    width: 100%;
    justify-content: center;
}

.filter-button:hover {
    background: #1a6cd1;
}


</style>

<script>
    function followUser(userId) {
        fetch(`/follow/${userId}`, { method: 'POST' })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                }
            });
    }

    function unfollowUser(userId) {
        fetch(`/unfollow/${userId}`, { method: 'POST' })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                }
            });
    }
</script>